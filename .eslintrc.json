{
    "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
    "settings": {
        "next": {
            "rootDir": "."
        }
    },
    "extends": [
        "next",
        "next/core-web-vitals",
        "prettier",
        "plugin:react/recommended",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended" // Make sure this is always the last configuration in the extends array.
    ],
    "plugins": [
        "react",
        "sort-destructure-keys"
    ],
    "parserOptions": {
        "ecmaVersion": 2021,
        "sourceType": "module",
        "project": "tsconfig.json",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "ignorePatterns": [
        ".eslintrc.js",
        ".prettierrc.js",
        "jest.config.js",
        "*.d.ts",
        "postcss.config.js",
        "tailwind.config.js",
        "next.config.js"
    ],
    "overrides": [
        {
            "files": "**/*.+(ts|tsx)",
            "parser": "@typescript-eslint/parser",
            "plugins": ["@typescript-eslint/eslint-plugin"],
            "extends": ["plugin:@typescript-eslint/recommended", "prettier"],
            "rules": {
                "@typescript-eslint/explicit-function-return-type": "off",
                "@typescript-eslint/explicit-module-boundary-types": "off",
                "@typescript-eslint/no-use-before-define": [1],
                "@typescript-eslint/no-explicit-any": "off",
                "@typescript-eslint/no-var-requires": "off",
                "@typescript-eslint/ban-ts-comment": "off",
                "@typescript-eslint/quotes": [
                    2,
                    "single",
                    {
                        "avoidEscape": true
                    }
                ],
                "max-len": ["warn",
                    {
                        "code": 120,
                        "ignorePattern": "/className=\".+\"/gm",
                        "ignoreTemplateLiterals": true,
                        "ignoreStrings": true,
                        "ignoreComments": true
                    }],
                "sort-keys": "warn",
                "react/destructuring-assignment": "warn",
                "react/display-name": "warn",
                "react/prop-types": "warn",
                "react/sort-prop-types": "warn",
                "react/jsx-sort-props": [
                    1,
                    {
                        "callbacksLast": true,
                        "ignoreCase": false,
                        "shorthandLast": true
                    }
                ],
                "no-var": "error",
                "semi": "error",
                "indent": ["error", 2, { "SwitchCase": 1 }],
                "no-multi-spaces": "error",
                "space-in-parens": "error",
                "no-multiple-empty-lines": "error",
                "prefer-const": "error",
                "no-use-before-define": "error",
                "sort-destructure-keys/sort-destructure-keys": 2,
                "@typescript-eslint/member-ordering": "error",
                "@typescript-eslint/consistent-type-definitions": ["error", "type"],
                "@typescript-eslint/prefer-optional-chain": "error",
                "@typescript-eslint/no-unused-vars": [
                    "warn",
                    {
                        "ignoreRestSiblings": true
                    }
                ],
                "@typescript-eslint/ban-ts-ignore": "off",
                "prefer-destructuring": ["error"],
                "prefer-template": "error",
                "object-shorthand": "warn",
                "newline-after-var": ["error", "always"],
                "curly": "error",
                "no-case-declarations": "error",
                "@typescript-eslint/prefer-nullish-coalescing": [
                    "error",
                    {
                        "ignoreConditionalTests": true,
                        "ignoreMixedLogicalExpressions": true
                    }
                ],
                "padding-line-between-statements": [
                    "error",
                    {
                        "blankLine": "always",
                        "next": "return",
                        "prev": "*"
                    },
                    {
                        "blankLine": "always",
                        "next": "*",
                        "prev": "directive"
                    },
                    {
                        "blankLine": "any",
                        "next": "directive",
                        "prev": "directive"
                    },
                    {
                        "blankLine": "always",
                        "next": "*",
                        "prev": ["case", "default"]
                    }
                ],
                "react/react-in-jsx-scope": "off",
                "react/no-unescaped-entities": "off"
            }
        }
    ],
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    }
}
